@use 'variables' as *;

// Responsive Breakpoints Mixin
@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// Container Mixin
@mixin container {
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding: 0 var(--container-padding);
}

// Flex Center Mixin
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// Absolute Center Mixin
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Button Reset Mixin
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  outline: none;
  color: inherit;
  font: inherit;
}

// List Reset Mixin
@mixin list-reset {
  list-style: none;
  padding: 0;
  margin: 0;
}

// Link Reset Mixin
@mixin link-reset {
  text-decoration: none;
  color: inherit;
  
  &:hover,
  &:focus {
    text-decoration: none;
    color: inherit;
  }
}

// Clearfix Mixin
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Visually Hidden Mixin
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

// Image Background Cover Mixin
@mixin bg-cover {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// Transition Mixin
@mixin transition($properties: all, $duration: 0.3s, $easing: ease) {
  transition: $properties $duration $easing;
}

// Box Shadow Mixin
@mixin box-shadow($x: 0, $y: 2px, $blur: 4px, $color: rgba(0, 0, 0, 0.1)) {
  box-shadow: $x $y $blur $color;
}

// Font Size Mixin with rem fallback
@mixin font-size($size) {
  font-size: $size + px;
  font-size: ($size / 16) + rem;
}